/*******************************************************************************
 * AnimNotify_ViewShake generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2015 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class AnimNotify_ViewShake extends AnimNotify_Scripted
    native(Anim)
    editinlinenew
    collapsecategories
    hidecategories(Object);

var private editconst float Duration;
var private editconst Vector RotAmplitude;
var private editconst Vector RotFrequency;
var private editconst Vector LocAmplitude;
var private editconst Vector LocFrequency;
var private editconst float FOVAmplitude;
var private editconst float FOVFrequency;
var() bool bDoControllerVibration;
/** Should use a bone location as the shake's epicenter? */
var() bool bUseBoneLocation;
/** Radius within which to shake player views. If 0 only plays on the animated player */
var() float ShakeRadius;
/** if so, bone name to use */
var() name BoneName;
var() export editinline CameraShake ShakeParams;

event Notify(Actor Owner, AnimNodeSequence AnimSeqInstigator)
{
    local Vector ViewShakeOrigin;
    local Pawn P;
    local PlayerController PC;

    // End:0xCF
    if(ShakeRadius == float(0))
    {
        P = Pawn(Owner);
        // End:0xCC
        if((P != none) && P.IsLocallyControlled())
        {
            PC = PlayerController(P.Controller);
            // End:0xCC
            if(PC != none)
            {
                PC.ClientPlayCameraShake(ShakeParams);
            }
        }
    }
    // End:0x1ED
    else
    {
        // End:0x15E
        if((bUseBoneLocation && AnimSeqInstigator != none) && AnimSeqInstigator.SkelComponent != none)
        {
            ViewShakeOrigin = AnimSeqInstigator.SkelComponent.GetBoneLocation(BoneName);
        }
        // End:0x186
        else
        {
            ViewShakeOrigin = Owner.Location;
        }
        // End:0x1ED
        if(Owner != none)
        {
            class'Camera'.static.PlayWorldCameraShake(ShakeParams, Owner, ViewShakeOrigin, 0.0, ShakeRadius, 1.0, bDoControllerVibration);
        }
    }
    //return;    
}

defaultproperties
{
    Duration=1.0
    RotAmplitude=(X=100.0,Y=100.0,Z=200.0)
    RotFrequency=(X=10.0,Y=10.0,Z=25.0)
    LocAmplitude=(X=0.0,Y=3.0,Z=6.0)
    LocFrequency=(X=1.0,Y=10.0,Z=20.0)
    FOVAmplitude=2.0
    FOVFrequency=5.0
    ShakeRadius=4096.0
}