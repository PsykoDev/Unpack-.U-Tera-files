/*******************************************************************************
 * KMeshProps generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2015 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class KMeshProps extends Object
    native
    noexport;

struct KSphereElem
{
    /** KAggregateGeom and all Elems are in UNREAL scale. InertiaTensor, COMOffset & Volume are in PHYSICS scale. */
    var() editconst Matrix TM;
    /** KAggregateGeom and all Elems are in UNREAL scale. InertiaTensor, COMOffset & Volume are in PHYSICS scale. */
    var() float Radius;
    /** Disable rigid body collision for this shape. */
    var() bool bNoRBCollision;
    /** Check against this shape even when per-poly collision is being used. */
    var() bool bPerPolyShape;

    structdefaultproperties
    {
        TM=(XPlane=(X=0.0,Y=1.0,Z=0.0,W=0.0),YPlane=(X=0.0,Y=0.0,Z=1.0,W=0.0),ZPlane=(X=0.0,Y=0.0,Z=0.0,W=1.0),WPlane=(X=1.0,Y=0.0,Z=0.0,W=0.0))
        Radius=1.0
        bNoRBCollision=false
        bPerPolyShape=false
    }
};

struct KBoxElem
{
    var() editconst Matrix TM;
    /** Disable rigid body collision for this shape. */
    var() float X;
    /** Disable rigid body collision for this shape. */
    var() float Y;
    /** Disable rigid body collision for this shape. */
    var() float Z;
    /** Disable rigid body collision for this shape. */
    var() bool bNoRBCollision;
    /** Check against this shape even when per-poly collision is being used. */
    var() bool bPerPolyShape;

    structdefaultproperties
    {
        TM=(XPlane=(X=0.0,Y=1.0,Z=0.0,W=0.0),YPlane=(X=0.0,Y=0.0,Z=1.0,W=0.0),ZPlane=(X=0.0,Y=0.0,Z=0.0,W=1.0),WPlane=(X=1.0,Y=0.0,Z=0.0,W=0.0))
        X=1.0
        Y=1.0
        Z=1.0
        bNoRBCollision=false
        bPerPolyShape=false
    }
};

struct KSphylElem
{
    /** The transform assumes the sphyl axis points down Z.#if WITH_S1, zardeine */
    var() editconst Matrix TM;
    /** The transform assumes the sphyl axis points down Z.#if WITH_S1, zardeine */
    var() float Radius;
    /** The transform assumes the sphyl axis points down Z.#if WITH_S1, zardeine */
    var() float Length;
    /** Disable rigid body collision for this shape. */
    var() bool bNoRBCollision;
    /** Check against this shape even when per-poly collision is being used. */
    var() bool bPerPolyShape;

    structdefaultproperties
    {
        TM=(XPlane=(X=0.0,Y=1.0,Z=0.0,W=0.0),YPlane=(X=0.0,Y=0.0,Z=1.0,W=0.0),ZPlane=(X=0.0,Y=0.0,Z=0.0,W=1.0),WPlane=(X=1.0,Y=0.0,Z=0.0,W=0.0))
        Radius=1.0
        Length=1.0
        bNoRBCollision=false
        bPerPolyShape=false
    }
};

struct KConvexElem
{
    var array<Vector> VertexData;
    var array<Plane> PermutedVertexData;
    var array<int> FaceTriData;
    var array<Vector> EdgeDirections;
    var array<Vector> FaceNormalDirections;
    var array<Plane> FacePlaneData;
    var Box ElemBox;

    structdefaultproperties
    {
        VertexData=none
        PermutedVertexData=none
        FaceTriData=none
        EdgeDirections=none
        FaceNormalDirections=none
        FacePlaneData=none
        ElemBox=(Min=(X=0.0,Y=0.0,Z=0.0),Max=(X=0.0,Y=0.0,Z=0.0),IsValid=0)
    }
};

struct KAggregateGeom
{
    var() editfixedsize array<KSphereElem> SphereElems;
    var() editfixedsize array<KBoxElem> BoxElems;
    var() editfixedsize array<KSphylElem> SphylElems;
    var() editfixedsize array<KConvexElem> ConvexElems;
    var noimport nontransactional native Pointer RenderInfo;
    /** Collision against this geom will not specially handle the "close and parallel" case.  Special-case. */
    var() bool bSkipCloseAndParallelChecks;

    structdefaultproperties
    {
        SphereElems=none
        BoxElems=none
        SphylElems=none
        ConvexElems=none
        bSkipCloseAndParallelChecks=false
    }
};

/** User-entered offset. UNREAL UNITS */
var() Vector COMNudge;
var() KAggregateGeom AggGeom;
