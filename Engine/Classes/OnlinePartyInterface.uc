/*******************************************************************************
 * OnlinePartyInterface generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2015 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
interface OnlinePartyInterface extends Interface
    abstract;

enum EPartyError
{
    EPE_Ok,
    EPE_UnknownError,
    EPE_TheyAlreadyInParty,
    EPE_YouAlreadyInParty,
    EPE_NotLeader,
    EPE_PartyDoesNotExist,
    EPE_PartyAtCapacity,
    EPE_TheyPendingOtherParty,
    EPE_TheyPendingOwnParty,
    EPE_MAX
};

function GetPartyMembers(out array<OnlineFriend> OutPartyMembers)
{
    //return;    
}

function bool IsPartyMemberLeader(OnlineFriend PartyMember)
{
    //return ReturnValue;    
}

function bool IsPartyTooLarge()
{
    //return ReturnValue;    
}

function int GetNumPartyMembers()
{
    //return ReturnValue;    
}

function bool SetPartyLimit(int NewLimit, bool bEnforce)
{
    //return ReturnValue;    
}

function int GetPartyLimit()
{
    //return ReturnValue;    
}

function InitPartyMembers()
{
    //return;    
}

function GetPartyLeaderName(out string LeaderName)
{
    //return;    
}

delegate OnInviteToParty(bool bSuccessful, OnlinePartyInterface.EPartyError ResponseCode)
{
    //return;    
}

function bool InviteToParty(UniqueNetId InvitePlayerId)
{
    //return ReturnValue;    
}

function bool NotifyPartyOfGame(bool bSuccessful)
{
    //return ReturnValue;    
}

delegate OnNotifyLeaderEnteredGame()
{
    //return;    
}

function AddOnNotifyLeaderEnteredGame(delegate<OnNotifyLeaderEnteredGame> InDelegate)
{
    //return;    
}

function ClearOnNotifyLeaderEnteredGame(delegate<OnNotifyLeaderEnteredGame> InDelegate)
{
    //return;    
}

function bool GetMostRecentRoomPassword(out string Password)
{
    //return ReturnValue;    
}

function QWord GetMostRecentRoomId()
{
    //return ReturnValue;    
}

function bool GetMostRecentPlayGoStatus()
{
    //return ReturnValue;    
}

delegate OnNotifyPartyMemberRemoved(UniqueNetId Remover, UniqueNetId RemovedPlayer)
{
    //return;    
}

function AddNotifyPartyMemberRemovedDelegate(delegate<OnNotifyPartyMemberRemoved> InDelegate)
{
    //return;    
}

function ClearNotifyPartyMemberRemovedDelegate(delegate<OnNotifyPartyMemberRemoved> InDelegate)
{
    //return;    
}

delegate OnNotifyPartyMembersAdded(array<OnlineFriend> AddedMembers)
{
    //return;    
}

function AddNotifyPartyMembersAddedDelegate(delegate<OnNotifyPartyMembersAdded> InDelegate)
{
    //return;    
}

function ClearNotifyPartyMembersAddedDelegate(delegate<OnNotifyPartyMembersAdded> InDelegate)
{
    //return;    
}

delegate OnNotifyPartyDisbanded()
{
    //return;    
}

function AddNotifyPartyDisbandedDelegate(delegate<OnNotifyPartyDisbanded> InDelegate)
{
    //return;    
}

function ClearNotifyPartyDisbandedDelegate(delegate<OnNotifyPartyDisbanded> InDelegate)
{
    //return;    
}
