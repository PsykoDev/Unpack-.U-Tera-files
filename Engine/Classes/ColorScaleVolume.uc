/*******************************************************************************
 * ColorScaleVolume generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2015 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class ColorScaleVolume extends Volume
    placeable
    hidecategories(Navigation,Object,Movement,Display,Collision,Brush,Attachment,Volume);

/** Desired color scale upon entering volume */
var() Vector ColorScale;
/** Interpolation time for the color scale */
var() float InterpTime;

event Touch(Actor Other, PrimitiveComponent OtherComp, Vector HitLocation, Vector HitNormal)
{
    local Pawn P;
    local PlayerController PC;

    super(Actor).Touch(Other, OtherComp, HitLocation, HitNormal);
    P = Pawn(Other);
    // End:0x105
    if(P != none)
    {
        PC = PlayerController(P.Controller);
        // End:0x105
        if((PC != none) && PC.PlayerCamera != none)
        {
            PC.PlayerCamera.SetDesiredColorScale(ColorScale, InterpTime);
        }
    }
    //return;    
}

event UnTouch(Actor Other)
{
    local Pawn P;
    local PlayerController PC;
    local Vector DesiredColorScale;
    local float DesiredInterpTime;
    local int Idx;
    local ColorScaleVolume CSV;

    super(Actor).UnTouch(Other);
    P = Pawn(Other);
    // End:0x23A
    if(P != none)
    {
        PC = PlayerController(P.Controller);
        // End:0x23A
        if((PC != none) && PC.PlayerCamera != none)
        {
            DesiredColorScale = WorldInfo.DefaultColorScale;
            DesiredInterpTime = 1.0;
            // End:0x1F4
            if(P.Touching.Length > 0)
            {
                Idx = P.Touching.Length;
                J0x129:
                // End:0x1F4 [Loop If]
                if(Idx >= 0)
                {
                    CSV = ColorScaleVolume(P.Touching[Idx]);
                    // End:0x1E6
                    if((CSV != none) && CSV != self)
                    {
                        DesiredColorScale = CSV.ColorScale;
                        DesiredInterpTime = CSV.InterpTime;
                        // [Explicit Break]
                        goto J0x1F4;
                    }
                    -- Idx;
                    J0x1F4:
                    // [Loop Continue]
                    goto J0x129;
                }
            }
            PC.PlayerCamera.SetDesiredColorScale(DesiredColorScale, DesiredInterpTime);
        }
    }
    //return;    
}

defaultproperties
{
    ColorScale=(X=1.0,Y=1.0,Z=1.0)
    InterpTime=1.0
    begin object name=BrushComponent0 class=BrushComponent
        ReplacementPrimitive=none
    object end
    // Reference: BrushComponent'Default__ColorScaleVolume.BrushComponent0'
    BrushComponent=BrushComponent0
    begin object name=BrushComponent0 class=BrushComponent
        ReplacementPrimitive=none
    object end
    // Reference: BrushComponent'Default__ColorScaleVolume.BrushComponent0'
    Components(0)=BrushComponent0
    begin object name=BrushComponent0 class=BrushComponent
        ReplacementPrimitive=none
    object end
    // Reference: BrushComponent'Default__ColorScaleVolume.BrushComponent0'
    CollisionComponent=BrushComponent0
}