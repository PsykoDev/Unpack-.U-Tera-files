/*******************************************************************************
 * PhysXParticleSystem generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2015 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class PhysXParticleSystem extends Object
    native(Particle)
    hidecategories(Object);

enum ESimulationMethod
{
    ESM_SPH,
    ESM_NO_PARTICLE_INTERACTION,
    ESM_MIXED_MODE,
    ESM_MAX
};

enum EPacketSizeMultiplier
{
    EPSM_4,
    EPSM_8,
    EPSM_16,
    EPSM_32,
    EPSM_64,
    EPSM_128,
    EPSM_MAX
};

/** Maximum number of particles to simulate. */
var(Buffer) int MaxParticles<UIMin=1|UIMax=65535>;
/** Maximum number of particles that will be deleted per frame to make room for newly spawned particles if MaxParticles is reached. */
var(Buffer) int ParticleSpawnReserve<UIMin=0|UIMax=4096>;
/** Enum indicating what type of object this particle should be considered for rigid body collision. */
var(Collision) const PrimitiveComponent.ERBCollisionChannel RBChannel;
/** Use SPH particles if you want particles to interact with each other. */
var(SdkExpert) PhysXParticleSystem.ESimulationMethod SimulationMethod;
/** Packet size can influence collision performance. */
var(SdkExpert) PhysXParticleSystem.EPacketSizeMultiplier PacketSizeMultiplier;
/** Types of objects that this particle will collide with. */
var(Collision) const RBCollisionChannelContainer RBCollideWithChannels;
/** Distance between particles and collision geometry maintained during simulation. */
var(Collision) float CollisionDistance;
/** "Bounciness" against static objects. */
var(Collision) float RestitutionWithStaticShapes<ClampMin=0.0|ClampMax=1.0>;
/** "Bounciness" against dynamic objects. */
var(Collision) float RestitutionWithDynamicShapes<ClampMin=0.0|ClampMax=1.0>;
/** Dynamic friction with static objects. */
var(Collision) float FrictionWithStaticShapes<ClampMin=0.0|ClampMax=1.0>;
/** Dynamic friction with dynamic objects. */
var(Collision) float FrictionWithDynamicShapes<ClampMin=0.0|ClampMax=1.0>;
/** Static friction with static objects. */
var(Collision) float StaticFrictionWithStaticShapes<ClampMin=0.0|UIMax=1.0>;
/** Static friction with dynamic objects. */
var(Collision) float StaticFrictionWithDynamicShapes<ClampMin=0.0|UIMax=1.0>;
/** Whether to collide with dynamic shapes. Disabling this option can improve performance. */
var(Collision) bool bDynamicCollision;
/** Disable gravity. */
var(Dynamics) bool bDisableGravity;
/** Whether to collide with static shapes. Disabling this flag isn't recommended. */
var(SdkExpert) bool bStaticCollision;
/** Whether dynamic particle collision affects the shapes the particles collide with. */
var(SdkExpert) bool bTwoWayCollision;
var transient bool bDestroy;
var transient bool bSyncFailed;
var transient bool bIsInGame;
/** Distance fluid can travel in one simulation step. Decreasing this value can improve performance. */
var(Dynamics) float MaxMotionDistance;
/** Velocity damping coefficient. */
var(Dynamics) float Damping<ClampMin=0.0|UIMax=1.0>;
/** Acceleration applied to each particle. */
var(Dynamics) Vector ExternalAcceleration;
/** Particle mass = RestParticleDistance^3 RestDensity. Also rest state for SPH fluid particles. */
var(SdkExpert) float RestParticleDistance;
/** Particle mass = RestParticleDistance^3 RestDensity. Also target density for SPH fluid particles. */
var(SdkExpert) float RestDensity<ClampMin=0.0>;
/** Sphere of influence for SPH fluid particles. */
var(SdkExpert) float KernelRadiusMultiplier<UIMin=1.0|UIMax=3.0>;
/** Affects compressibility of SPH fluid particles. Low values are more compressible. Higher values could result in unstable simulation. */
var(SdkExpert) float Stiffness<ClampMin=0.0|UIMin=1.0|UIMax=200.0>;
/** Viscosity for SPH fluid particles. Higher values will result in honey-like behavior. */
var(SdkExpert) float Viscosity<ClampMin=0.0|UIMin=5.0|UIMax=300.0>;
/** Impulse transfer from particles to colliding dynamic shapes, if bTwoWayCollision has been set. */
var(SdkExpert) float CollisionResponseCoefficient<ClampMin=0.0|UIMax=1.0>;
var native Pointer CascadeScene;
var native Pointer PSys;

defaultproperties
{
    MaxParticles=32767
    RBChannel=ERBCollisionChannel.RBCC_EffectPhysics
    SimulationMethod=ESimulationMethod.ESM_NO_PARTICLE_INTERACTION
    PacketSizeMultiplier=EPacketSizeMultiplier.EPSM_16
    RBCollideWithChannels=(Default=true,Nothing=false,Pawn=false,Vehicle=false,Water=false,GameplayPhysics=true,EffectPhysics=false,Untitled1=false,Untitled2=false,Untitled3=false,Untitled4=false,Cloth=false,FluidDrain=true,SoftBody=false,FracturedMeshPart=false,BlockingVolume=false,DeadPawn=false,Clothing=false,ClothingCollision=false)
    CollisionDistance=10.0
    RestitutionWithStaticShapes=0.50
    RestitutionWithDynamicShapes=0.50
    FrictionWithStaticShapes=0.050
    FrictionWithDynamicShapes=0.50
    bDynamicCollision=true
    bStaticCollision=true
    MaxMotionDistance=64.0
    RestParticleDistance=64.0
    RestDensity=1000.0
    KernelRadiusMultiplier=2.0
    Stiffness=20.0
    Viscosity=6.0
    CollisionResponseCoefficient=0.20
}