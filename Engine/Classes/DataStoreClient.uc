/*******************************************************************************
 * DataStoreClient generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2015 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class DataStoreClient extends UIRoot
    native(UserInterface)
    config(Engine)
    hidecategories(Object,UIRoot);

struct native transient PlayerDataStoreGroup
{
    var init const transient LocalPlayer PlayerOwner;
    var init const transient array<UIDataStore> DataStores;

    structdefaultproperties
    {
        PlayerOwner=none
        DataStores=none
    }
};

var config array<config string> GlobalDataStoreClasses;
var const array<UIDataStore> GlobalDataStores;
var config array<config string> PlayerDataStoreClassNames;
var private const array< class<UIDataStore> > PlayerDataStoreClasses;
var const array<PlayerDataStoreGroup> PlayerDataStores;

// Export UDataStoreClient::execFindDataStore(FFrame&, void* const)
native final function UIDataStore FindDataStore(name DataStoreTag, optional LocalPlayer PlayerOwner);

// Export UDataStoreClient::execCreateDataStore(FFrame&, void* const)
native final function UIDataStore CreateDataStore(class<UIDataStore> DataStoreClass);

// Export UDataStoreClient::execRegisterDataStore(FFrame&, void* const)
native final function bool RegisterDataStore(UIDataStore DataStore, optional LocalPlayer PlayerOwner);

// Export UDataStoreClient::execUnregisterDataStore(FFrame&, void* const)
native final function bool UnregisterDataStore(UIDataStore DataStore);

// Export UDataStoreClient::execFindPlayerDataStoreIndex(FFrame&, void* const)
native final function int FindPlayerDataStoreIndex(LocalPlayer PlayerOwner);

final function GetPlayerDataStoreClasses(out array< class<UIDataStore> > out_DataStoreClasses)
{
    out_DataStoreClasses = PlayerDataStoreClasses;
    //return;    
}

final function class<UIDataStore> FindDataStoreClass(class<UIDataStore> RequiredMetaClass)
{
    local int I;
    local class<UIDataStore> Result;

    I = 0;
    J0x0B:
    // End:0xA8 [Loop If]
    if(I < GlobalDataStores.Length)
    {
        // End:0x9A
        if(GlobalDataStores[I].IsA(RequiredMetaClass.Name))
        {
            Result = GlobalDataStores[I].Class;
            // [Explicit Break]
            goto J0xA8;
        }
        ++ I;
        J0xA8:
        // [Loop Continue]
        goto J0x0B;
    }
    // End:0x12A
    if(Result == none)
    {
        I = 0;
        J0xC2:
        // End:0x12A [Loop If]
        if(I < PlayerDataStoreClasses.Length)
        {
            // End:0x11C
            if(ClassIsChildOf(PlayerDataStoreClasses[I], RequiredMetaClass))
            {
                Result = PlayerDataStoreClasses[I];
                // [Explicit Break]
                goto J0x12A;
            }
            ++ I;
            J0x12A:
            // [Loop Continue]
            goto J0xC2;
        }
    }
    return Result;
    //return ReturnValue;    
}

final event NotifyGameSessionEnded()
{
    local int I, DataStoreIndex;
    local array<UIDataStore> DataStoreArray;

    DataStoreArray = GlobalDataStores;
    DataStoreIndex = 0;
    J0x1E:
    // End:0x8D [Loop If]
    if(DataStoreIndex < DataStoreArray.Length)
    {
        // End:0x7F
        if(DataStoreArray[DataStoreIndex].NotifyGameSessionEnded())
        {
            UnregisterDataStore(DataStoreArray[DataStoreIndex]);
        }
        ++ DataStoreIndex;
        // [Loop Continue]
        goto J0x1E;
    }
    I = PlayerDataStores.Length - 1;
    J0xA4:
    // End:0x168 [Loop If]
    if(I >= 0)
    {
        DataStoreArray = PlayerDataStores[I].DataStores;
        DataStoreIndex = 0;
        J0xEE:
        // End:0x15A [Loop If]
        if(DataStoreIndex < DataStoreArray.Length)
        {
            DataStoreArray[DataStoreIndex].NotifyGameSessionEnded();
            UnregisterDataStore(DataStoreArray[DataStoreIndex]);
            ++ DataStoreIndex;
            // [Loop Continue]
            goto J0xEE;
        }
        -- I;
        // [Loop Continue]
        goto J0xA4;
    }
    //return;    
}

final function DebugDumpDataStoreInfo(bool bVerbose)
{
    local int DataStoreIndex, PlayerDataStoreIndex;
    local string PlayerName;
    local LocalPlayer PlayerOwner;
    local array<UIDataStore> PlayerGroupDataStores;

    LogInternal("GlobalDataStores: " $ string(GlobalDataStores.Length), 'DevDataStore');
    DataStoreIndex = 0;
    J0x38:
    // End:0xDC [Loop If]
    if(DataStoreIndex < GlobalDataStores.Length)
    {
        LogInternal(((((("\\tGlobalDataStore[" $ string(DataStoreIndex)) $ "]:") @ string(GlobalDataStores[DataStoreIndex].Tag)) @ "(") $ string(GlobalDataStores[DataStoreIndex])) $ ")", 'DevDataStore');
        ++ DataStoreIndex;
        // [Loop Continue]
        goto J0x38;
    }
    LogInternal("");
    LogInternal("Player data store groups:" $ string(PlayerDataStores.Length), 'DevDataStore');
    DataStoreIndex = 0;
    J0x120:
    // End:0x391 [Loop If]
    if(DataStoreIndex < PlayerDataStores.Length)
    {
        PlayerOwner = PlayerDataStores[DataStoreIndex].PlayerOwner;
        PlayerGroupDataStores = PlayerDataStores[DataStoreIndex].DataStores;
        PlayerName = ((((PlayerOwner != none) && PlayerOwner.Actor != none) && PlayerOwner.Actor.PlayerReplicationInfo != none) ? PlayerOwner.Actor.PlayerReplicationInfo.PlayerName : "None");
        LogInternal(((((((("\\tPlayerDataStores for player " $ string(DataStoreIndex)) $ ":") @ string(PlayerGroupDataStores.Length)) @ "(") $ PlayerName) @ "-") @ string(PlayerOwner)) $ ")", 'DevDataStore');
        PlayerDataStoreIndex = 0;
        J0x2DE:
        // End:0x383 [Loop If]
        if(PlayerDataStoreIndex < PlayerGroupDataStores.Length)
        {
            LogInternal(((((("\\t\\tPlayerDataStore[" $ string(PlayerDataStoreIndex)) $ "]:") @ string(PlayerGroupDataStores[PlayerDataStoreIndex].Tag)) @ "(") $ string(PlayerGroupDataStores[PlayerDataStoreIndex])) $ ")", 'DevDataStore');
            ++ PlayerDataStoreIndex;
            // [Loop Continue]
            goto J0x2DE;
        }
        ++ DataStoreIndex;
        // [Loop Continue]
        goto J0x120;
    }
    //return;    
}

defaultproperties
{
    GlobalDataStoreClasses(0)="Engine.UIDataStore_GameResource"
    GlobalDataStoreClasses(1)="Engine.UIDataStore_Fonts"
    GlobalDataStoreClasses(2)="Engine.UIDataStore_Registry"
    GlobalDataStoreClasses(3)="Engine.UIDataStore_InputAlias"
}