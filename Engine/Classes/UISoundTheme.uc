/*******************************************************************************
 * UISoundTheme generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2015 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class UISoundTheme extends Object
    native(UserInterface);

struct native SoundEventMapping
{
    /** Name of the event that corresponds to the sound cue below. */
    var() name SoundEventName;
    /** Sound cue to play when the the above event is received. */
    var() SoundCue SoundToPlay;

    structdefaultproperties
    {
        SoundEventName=None
        SoundToPlay=none
    }
};

/** List of the event bindings for this sound theme.  Usually, these will be specified by a designer in an archetype in the editor, or in the defaultproperties */
var() array<SoundEventMapping> SoundEventBindings;

event ProcessSoundEvent(name SoundEventName, optional PlayerController SoundOwner)
{
    local int EventIndex;

    EventIndex = SoundEventBindings.Find('SoundEventName', SoundEventName);
    // End:0x186
    if(EventIndex != -1)
    {
        LogInternal((((("ProcessSoundEvent - Sound Event: " $ string(SoundEventName)) $ ", Sound Theme: ") $ string(self)) $ ", Sound: ") $ string(SoundEventBindings[EventIndex].SoundToPlay), 'DevGFxUI');
        // End:0x123
        if(SoundOwner != none)
        {
            SoundOwner.PlaySound(SoundEventBindings[EventIndex].SoundToPlay, true, true, true);
        }
        // End:0x183
        else
        {
            class'WorldInfo'.static.GetWorldInfo().PlaySound(SoundEventBindings[EventIndex].SoundToPlay, true, true, true);
        }
    }
    // End:0x1D7
    else
    {
        LogInternal((string(self) $ ": ProcessSoundEvent - Unable to find a binding for event: ") $ string(SoundEventName));
    }
    //return;    
}
