/*******************************************************************************
 * MaterialEditorInstanceConstant generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2015 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class MaterialEditorInstanceConstant extends Object
    native
    collapsecategories
    hidecategories(Object);

struct native EditorParameterGroup
{
    var name GroupName;
    var() const editfixedsize editinline array<editinline DEditorParameterValue> Parameters;

    structdefaultproperties
    {
        GroupName=None
        Parameters=none
    }
};

struct native EditorParameterValue
{
    var() bool bOverride;
    var() name ParameterName;
    var Guid ExpressionId;

    structdefaultproperties
    {
        bOverride=false
        ParameterName=None
        ExpressionId=(A=0,B=0,C=0,D=0)
    }
};

struct native EditorVectorParameterValue extends EditorParameterValue
{
    var() LinearColor ParameterValue;

    structdefaultproperties
    {
        ParameterValue=(R=0.0,G=0.0,B=0.0,A=1.0)
    }
};

struct native EditorScalarParameterValue extends EditorParameterValue
{
    var() float ParameterValue;
};

struct native EditorTextureParameterValue extends EditorParameterValue
{
    var() Texture ParameterValue;
};

struct native EditorFontParameterValue extends EditorParameterValue
{
    var() Font FontValue;
    var() int FontPage;
};

struct native EditorStaticSwitchParameterValue extends EditorParameterValue
{
    var() bool ParameterValue;
};

struct native ComponentMaskParameter
{
    var() bool R;
    var() bool G;
    var() bool B;
    var() bool A;

    structdefaultproperties
    {
        R=false
        G=false
        B=false
        A=false
    }
};

struct native EditorStaticComponentMaskParameterValue extends EditorParameterValue
{
    var() ComponentMaskParameter ParameterValue;
};

/** Physical material to use for this graphics material. Used for sounds, effects etc. */
var() PhysicalMaterial PhysMaterial;
/** Physical material mask settings to use. */
var() PhysicalMaterialMaskSettings PhysicalMaterialMask;
/** since the Parent may point across levels and the property editor needs to import this text, it must be marked crosslevel so it doesn't set itself to NULL in FindImportedObject */
var() crosslevelpassive MaterialInterface Parent;
var() editfixedsize editinline array<editinline EditorParameterGroup> ParameterGroups;
/** Mobile parameters */
var() editfixedsize editinline array<editinline EditorParameterGroup> MobileParameterGroups;
var MaterialInstanceConstant SourceInstance;
var duplicatetransient const transient array<Guid> VisibleExpressions;
var deprecated Texture FlattenedTexture;
var deprecated Texture MobileBaseTexture;
var deprecated Texture MobileEmissiveTexture;
var deprecated Texture MobileDetailTexture;
var deprecated Texture MobileEnvironmentTexture;
var deprecated Texture MobileNormalTexture;
var deprecated Texture MobileMaskTexture;
/** The Lightmass override settings for this object. */
var(Lightmass) LightmassParameterizedMaterialSettings LightmassSettings;
/** Should we use old style typed arrays for unassigned parameters instead of a None group (new style)? */
var() bool bUseOldStyleMICEditorGroups;
/** WITH_S1ducklmg 2008.10.25 : MaterialParameterControl */
var() bool bUsedByMaterialParameterControl;
/** WITH_S1hhg128 2018.03.29 */
var() bool bUseMeshMaterialParameter;

defaultproperties
{
    Parent=none
    LightmassSettings=(CastShadowAsMasked=(ParameterValue=false,bOverride=false),EmissiveBoost=(ParameterValue=1.0,bOverride=false),DiffuseBoost=(ParameterValue=1.0,bOverride=false),SpecularBoost=(ParameterValue=1.0,bOverride=false),ExportResolutionScale=(ParameterValue=1.0,bOverride=false),DistanceFieldPenumbraScale=(ParameterValue=1.0,bOverride=false))
}