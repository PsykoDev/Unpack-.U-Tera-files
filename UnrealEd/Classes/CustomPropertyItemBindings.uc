/*******************************************************************************
 * CustomPropertyItemBindings generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2015 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class CustomPropertyItemBindings extends Object
    native(Private)
    config(Editor);

struct native PropertyItemCustomProxy
{
    /**  
     *The complete pathname for the property that this custom proxy should be applied to.  When the property window
     *        encounters a property with this path name, it will use the PropertyItemClassName to represent that property instead
     *        of the default property item class.
     */
    var() config string PropertyPathName;
    /** The complete path name for the class to use in the property item window for the associated property. */
    var() config string PropertyItemClassName;
    /**  
     *Only relevant when the property associated with this custom property item proxy is an array property.  Indicates that this
     *        this custom property item proxy should be used when creating the item which corresponds to the array header item, rather than the
     *        normal array header item.
     */
    var() config bool bReplaceArrayHeaders;
    /**  
     *Only relevant when the property associated with this custom property item proxy control is an array property.  Indicates that this
     *        custom property item proxy should not be used for individual array elements.
     */
    var() config bool bIgnoreArrayElements;
    var transient Class PropertyItemClass;

    structdefaultproperties
    {
        PropertyPathName=""
        PropertyItemClassName=""
        bReplaceArrayHeaders=false
        bIgnoreArrayElements=false
        PropertyItemClass=none
    }
};

struct native PropertyTypeCustomProxy
{
    /** The name of the property that this custom proxy applies to (e.g. ObjectProperty, ComponentProperty, etc.). */
    var() config name PropertyName;
    /** The complete path name for the object class that this custom proxy should be used for (e.g. Engine.UITexture) */
    var() config string PropertyObjectClassPathName;
    /** The complete path name for the class to use in the property item window for the associated property. */
    var() config string PropertyItemClassName;
    /**  
     *Only relevant when the property associated with this custom property item proxy is an array property.  Indicates that this
     *        this custom property item proxy should be used when creating the item which corresponds to the array header item, rather than the
     *        normal array header item.
     */
    var() config bool bReplaceArrayHeaders;
    /**  
     *Only relevant when the property associated with this custom property item proxy control is an array property.  Indicates that this
     *        custom property item proxy should not be used for individual array elements.
     */
    var() config bool bIgnoreArrayElements;
    var transient Class PropertyItemClass;

    structdefaultproperties
    {
        PropertyName=None
        PropertyObjectClassPathName=""
        PropertyItemClassName=""
        bReplaceArrayHeaders=false
        bIgnoreArrayElements=false
        PropertyItemClass=none
    }
};

struct native PropertyItemCustomClass
{
    /**  
     *The complete pathname for the property/script-struct that this property binding should be applied to.  When the property window
     *        encounters a property that has this path name, it will use the PropertyItemClassName to represent that property instead
     *        of the default property item class.
     *        
     *        If PropertyPathName corresponds to a script struct, the custom property item class will be used for all struct properties for that struct.
     */
    var() config string PropertyPathName;
    /** The name of the WxItemPropertyControl subclass to use in the property item window for the associated property. */
    var() config string PropertyItemClassName;
    /**  
     *Only relevant when the property associated with this custom property editing control is an array property.  Indicates that this
     *        this custom property item control should be used when creating the item which corresponds to the array header item, rather than the
     *        normal array header item.
     */
    var() config bool bReplaceArrayHeaders;
    /**  
     *Only relevant when the property associated with this custom property editing control is an array property.  Indicates that this
     *        custom property item control should not be used for individual array elements.
     */
    var() config bool bIgnoreArrayElements;
    var native transient Pointer WxPropertyItemClass;

    structdefaultproperties
    {
        PropertyPathName=""
        PropertyItemClassName=""
        bReplaceArrayHeaders=false
        bIgnoreArrayElements=false
    }
};

struct native PropertyTypeCustomClass
{
    /** The name of the property that this custom item class applies to (e.g. ObjectProperty, ComponentProperty, etc.). */
    var() config name PropertyName;
    /** The complete path name for the object class that this custom item class should be used for (e.g. Engine.UITexture) */
    var() config string PropertyObjectClassPathName;
    /** The name of the WxItemPropertyControl subclass to use in the property item window for the associated property. */
    var() config string PropertyItemClassName;
    /**  
     *Only relevant when the property associated with this custom property editing control is an array property.  Indicates that this
     *        this custom property item control should be used when creating the item which corresponds to the array header item, rather than the
     *        normal array header item.
     */
    var() config bool bReplaceArrayHeaders;
    /**  
     *Only relevant when the property associated with this custom property editing control is an array property.  Indicates that this
     *        custom property item control should not be used for individual array elements.
     */
    var() config bool bIgnoreArrayElements;
    var native transient Pointer WxPropertyItemClass;

    structdefaultproperties
    {
        PropertyName=None
        PropertyObjectClassPathName=""
        PropertyItemClassName=""
        bReplaceArrayHeaders=false
        bIgnoreArrayElements=false
    }
};

/** custom property item classes, for specific properties */
var() config array<config PropertyItemCustomClass> CustomPropertyClasses;
/** custom property item classes, per property type */
var() config array<config PropertyTypeCustomClass> CustomPropertyTypeClasses;
/** custom draw proxy classes, for specific properties */
var() config array<config PropertyItemCustomProxy> CustomPropertyDrawProxies;
/** custom draw proxy classes, per property type */
var() config array<config PropertyItemCustomProxy> CustomPropertyInputProxies;
/** custom input proxy classes, for specific properties */
var() config array<config PropertyTypeCustomProxy> CustomPropertyTypeDrawProxies;
/** custom input proxy classes, per property type */
var() config array<config PropertyTypeCustomProxy> CustomPropertyTypeInputProxies;

defaultproperties
{
    CustomPropertyClasses(0)=(PropertyPathName="UnrealEd.MaterialEditorInstanceConstant:LightmassSettings",PropertyItemClassName="WxPropertyWindow_LightmassMaterialParameters",bReplaceArrayHeaders=true,bIgnoreArrayElements=false)
    CustomPropertyClasses(1)=(PropertyPathName="UnrealEd.MaterialEditorInstanceTimeVarying:LightmassSettings",PropertyItemClassName="WxPropertyWindow_LightmassMaterialParameters",bReplaceArrayHeaders=true,bIgnoreArrayElements=false)
    CustomPropertyClasses(2)=(PropertyPathName="UnrealEd.UnrealEdTypes:LightmassScalarParameterValue.ParameterValue",PropertyItemClassName="WxCustomPropertyItem_LightmassMaterialParameter",bReplaceArrayHeaders=false,bIgnoreArrayElements=false)
    CustomPropertyClasses(3)=(PropertyPathName="UnrealEd.MaterialEditorInstanceConstant:ParameterGroups",PropertyItemClassName="WxCustomPropertyItem_ParameterGroup",bReplaceArrayHeaders=true,bIgnoreArrayElements=false)
    CustomPropertyClasses(4)=(PropertyPathName="UnrealEd.MaterialEditorInstanceConstant:MobileParameterGroups",PropertyItemClassName="WxCustomPropertyItem_ParameterGroup",bReplaceArrayHeaders=true,bIgnoreArrayElements=false)
    CustomPropertyClasses(5)=(PropertyPathName="UnrealEd.DEditorVectorParameterValue:ParameterValue",PropertyItemClassName="WxCustomPropertyItem_MIC_Parameter",bReplaceArrayHeaders=true,bIgnoreArrayElements=false)
    CustomPropertyClasses(6)=(PropertyPathName="UnrealEd.DEditorStaticSwitchParameterValue:ParameterValue",PropertyItemClassName="WxCustomPropertyItem_MIC_Parameter",bReplaceArrayHeaders=true,bIgnoreArrayElements=false)
    CustomPropertyClasses(7)=(PropertyPathName="UnrealEd.DEditorStaticComponentMaskParameterValue:ParameterValue",PropertyItemClassName="WxCustomPropertyItem_MIC_Parameter",bReplaceArrayHeaders=true,bIgnoreArrayElements=false)
    CustomPropertyClasses(8)=(PropertyPathName="UnrealEd.DEditorScalarParameterValue:ParameterValue",PropertyItemClassName="WxCustomPropertyItem_MIC_Parameter",bReplaceArrayHeaders=true,bIgnoreArrayElements=false)
    CustomPropertyClasses(9)=(PropertyPathName="UnrealEd.DEditorTextureParameterValue:ParameterValue",PropertyItemClassName="WxCustomPropertyItem_MIC_Parameter",bReplaceArrayHeaders=true,bIgnoreArrayElements=false)
    CustomPropertyClasses(10)=(PropertyPathName="Engine.WorldInfo:LightmassSettings",PropertyItemClassName="WxCustomPropertyItem_LightmassWorldInfoSettingsParameter",bReplaceArrayHeaders=false,bIgnoreArrayElements=false)
    CustomPropertyInputProxies(0)=(PropertyPathName="Engine.MaterialExpressionParameter:Group",PropertyItemClassName="UnrealEd.PropertyInput_DynamicCombo",bReplaceArrayHeaders=true,bIgnoreArrayElements=false,PropertyItemClass=none)
    CustomPropertyInputProxies(1)=(PropertyPathName="Engine.MaterialExpressionTextureSampleParameter:Group",PropertyItemClassName="UnrealEd.PropertyInput_DynamicCombo",bReplaceArrayHeaders=true,bIgnoreArrayElements=false,PropertyItemClass=none)
    CustomPropertyInputProxies(2)=(PropertyPathName="Engine.MaterialExpressionFontSampleParameter:Group",PropertyItemClassName="UnrealEd.PropertyInput_DynamicCombo",bReplaceArrayHeaders=true,bIgnoreArrayElements=false,PropertyItemClass=none)
}